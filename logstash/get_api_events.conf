input {
  pipeline {
    address => "api-events"
  }
}

filter {

  # Get the starting date - 1 year before now_ms
  ruby {
    code => "
      event.set('start_time_ms', event.get('now_ms') - 31536000000)
    "
  }

  date {
    match => ["now_ms", "UNIX_MS"]
    target => "now_formatted"
  }

  date {
    match => ["start_time_ms", "UNIX_MS"]
    target => "start_time_formatted"
  }

  # Get API events
  http {
    connect_timeout => 120
    request_timeout => 120
    socket_timeout => 120
    url => "https://anypoint.mulesoft.com/analytics/1.0/%{organization_id}/events?format=json&startDate=%{start_time_formatted}&endDate=%{now_formatted}&fields=Timestamp,API%20ID,API%20Version%20ID,Application,Message%20ID,Request%20Size,Response%20Size,Response%20Time,Browser,User%20Agent%20Name,User%20Agent%20Version,OS%20Family,OS%20Version,Hardware%20Platform,Timezone,OS%20Minor%20Version,OS%20Major%20Version,City,Client%20IP,Continent,Postal%20Code,Verb,Country,Resource%20Path,Status%20Code,Request%20Outcome,Runtime%20Host,Violated%20Policy%20Name,API%20Name,API%20Version%20Name,Application%20Name"
    verb => GET
    headers => {
      Authorization => "Bearer %{access_token}"
    }
  }

  # Drop all empty bodies and error responses
  if "_httprequestfailure" in [tags] or [body.length] == 0 {
    drop {}
  }

  # Split the records and remap
  split {
    field => "body"
  }
}

output {
  stdout { codec => rubydebug }
  # elasticsearch {
  #   hosts => ["${ES_HOST:http\://localhost:9200}"]
  #   # filebeat-* works with Infra Logs view. Can be changed in Kibana:
  #   # xpack.infra.sources.default.logAlias
  #   index => "apievents-%{+YYYY.MM.dd}"
  #   user => "${ES_USER:elastic}"
  #   password => "${ES_PASS:changeme}"
  #
  #   # document_id => "%{record_id}"
  #   # manage_template => true
  #   # template => "templates/filebeat_template.json"
  #   # template_name => "filebeat-*"
  #   # template_overwrite => true
  # }
}
