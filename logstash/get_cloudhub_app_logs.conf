input {
  pipeline {
    address => "logs"
  }
}

filter {
  # 1. Get applications
  http {
    url => "https://anypoint.mulesoft.com/cloudhub/api/v2/applications"
    verb => GET
    headers => {
      Authorization => "Bearer %{access_token}"
      "X-ANYPNT-ENV-ID" => "%{environment_id}"
      "Content-Type" => "application/json"
    }
  }
  # Split and create separate events for every application record
  split {
    field => "body"
  }
  mutate {
    add_field => {
      app_name => "%{[body][domain]}"
    }
  }
  prune {
    whitelist_names => [ "now_ms", "access_token", "organization_id", "environment_id", "deployment_id", "app_name", "environment.name"]
  }


  # 2. Get deployment_id
  http {
    url => "https://anypoint.mulesoft.com/cloudhub/api/v2/applications/%{app_name}/deployments"
    verb => GET
    headers => {
      Authorization => "Bearer %{access_token}"
      "X-ANYPNT-ENV-ID" => "%{environment_id}"
      "Content-Type" => "application/json"
    }
  }

  # Split and create separate events for all deployments, including empty ones
  split {
    field => "[body][data]"
  }
  mutate {
    add_field => {
      deployment_id => "%{[body][data][deploymentId]}"
    }
  }
  prune {
    whitelist_names => [ "now_ms", "access_token", "organization_id", "environment_id", "app_name", "deployment_id", "environment.name"]
  }

  # 3. Get latest_record_id
  elasticsearch {
    hosts => ["${ES_HOST:http://localhost:9200}"]
    # filebeat-* works with Infra Logs view. Can be changed in Kibana:
    # xpack.infra.sources.default.logAlias
    index => "cloudhub-logs-*"
    user => "${ES_USER:}"
    password => "${ES_PASS:}"
    query => "app_name:%{app_name} AND deployment_id:%{deployment_id}"
    result_size => 1
    sort => "@timestamp:desc,line:desc"
    fields => {
      "record_id" => "latest_record_id"
    }
  }


  # 4. Get logs

  # If it is not a first request, use latest_record_id
  # startTime 0 can be brought forward, if syncing logs since the beginning of time is not desired
  if "" in [latest_record_id] {
    http {
      connect_timeout => 120
      request_timeout => 120
      socket_timeout => 120
      url => "https://anypoint.mulesoft.com/cloudhub/api/v2/applications/%{app_name}/logs"
      verb => POST
      headers => {
        Authorization => "Bearer %{access_token}"
        "Content-Type" => "application/json"
        "X-ANYPNT-ENV-ID" => "%{environment_id}"
        "X-ANYPNT-ORG-ID" => "%{organization_id}"
      }
      body => {
        deploymentId => "%{deployment_id}"
        startTime => 0
        endTime => "%{now_ms}"
        limitMsgLen => 5000
        limit => "${NUM_LOG_LINES:250}"
        lowerId => "%{latest_record_id}"
      }
      body_format => json
    }
  } else {
    # First batch request without latest_record_id
    mutate {
      remove_tag => [ "_elasticsearch_lookup_failure" ]
    }

    http {
      connect_timeout => 120
      request_timeout => 120
      socket_timeout => 120
      url => "https://anypoint.mulesoft.com/cloudhub/api/v2/applications/%{app_name}/logs"
      verb => POST
      headers => {
        Authorization => "Bearer %{access_token}"
        "Content-Type" => "application/json"
        "X-ANYPNT-ENV-ID" => "%{environment_id}"
        "X-ANYPNT-ORG-ID" => "%{organization_id}"
      }
      body => {
        deploymentId => "%{deployment_id}"
        startTime => 0
        endTime => "%{now_ms}"
        limitMsgLen => 5000
        limit => "${NUM_LOG_LINES:250}"
      }
      body_format => json
    }
  }

  # Drop all empty bodies and error responses
  if "_httprequestfailure" in [tags] or [body.length] == 0 {
    drop {}
  }

  # Split the records and remap
  split {
    field => "[body]"
  }

  mutate {
    add_field => {
      "service.id" => "%{[body][instanceId]}"
      "line" => "%{[body][line]}"
      "record_id" => "%{[body][recordId]}"
      "log.level" => "%{[body][event][priority]}"
      "log.logger" => "%{[body][event][loggerName]}"
      "log.thread" => "%{[body][event][threadName]}"
      "timestamp1" => "%{[body][event][timestamp]}"
      "message" => "%{[body][event][message]}"
      "ecs.version" => "1.1.0"
      "organization.id" => "%{[organization_id]}"
      "environment.id" => "%{[environment_id]}"
    }
  }
  mutate {
    convert => {
      "line" => "integer"

      "timestamp1" => "integer"
    }
  }

  date {
    match => [ "timestamp1", "UNIX_MS" ]
  }

  prune {
    blacklist_names => ["environment_id", "organization_id", "now_ms", "body", "timestamp1", "access_token", "headers", "now_ms", "latest_record_id"]
  }

}

output {
  # stdout { codec => rubydebug }
  elasticsearch {
    hosts => ["${ES_HOST:http://localhost:9200}"]
    # filebeat-* works with Infra Logs view. Can be changed in Kibana:
    # xpack.infra.sources.default.logAlias
    index => "cloudhub-logs-%{+YYYY.MM.dd}"
    user => "${ES_USER:}"
    password => "${ES_PASS:}"
    document_id => "%{record_id}"
    manage_template => true
    template => "templates/cloudhub-logs-template.json"
    template_name => "cloudhub-logs"
    template_overwrite => true
  }
}
